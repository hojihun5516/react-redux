{"ast":null,"code":"import _objectSpread from \"/Users/a1/Desktop/redux_example/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as types from '../module/CalcActions';\nvar initialState = {\n  diff: 0,\n  result: 0\n};\nexport default function calcReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.ADD:\n      return _objectSpread({}, state, {\n        result: parseInt(state.result) + parseInt(state.diff)\n      });\n\n    case types.SUB:\n      return _objectSpread({}, state, {\n        result: state.result - state.diff\n      });\n\n    case types.SET_DIFF:\n      return _objectSpread({}, state, {\n        diff: action.diff\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/a1/Desktop/redux_example/myapp/src/reducer/calcReducer.js"],"names":["types","initialState","diff","result","calcReducer","state","action","type","ADD","parseInt","SUB","SET_DIFF"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,uBAAvB;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAG,CADU;AAEjBC,EAAAA,MAAM,EAAG;AAFQ,CAArB;AAKA,eAAe,SAASC,WAAT,GAAiD;AAAA,MAA5BC,KAA4B,uEAArBJ,YAAqB;AAAA,MAAPK,MAAO;;AAC5D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKP,KAAK,CAACQ,GAAX;AACI,+BACOH,KADP;AAEIF,QAAAA,MAAM,EAAEM,QAAQ,CAACJ,KAAK,CAACF,MAAP,CAAR,GAAuBM,QAAQ,CAACJ,KAAK,CAACH,IAAP;AAF3C;;AAKJ,SAAKF,KAAK,CAACU,GAAX;AACI,+BACOL,KADP;AAEIF,QAAAA,MAAM,EAAEE,KAAK,CAACF,MAAN,GAAaE,KAAK,CAACH;AAF/B;;AAIJ,SAAKF,KAAK,CAACW,QAAX;AACI,+BACON,KADP;AAEIH,QAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFjB;;AAIJ;AACI,aAAOG,KAAP;AAlBR;AAoBH","sourcesContent":["import * as types from '../module/CalcActions';\n\nconst initialState = {\n    diff : 0,\n    result : 0\n}\n\nexport default function calcReducer(state= initialState, action){\n    switch(action.type){\n        case types.ADD:\n            return{\n                ...state,\n                result: parseInt(state.result)+parseInt(state.diff)\n            }\n        \n        case types.SUB:\n            return{\n                ...state,\n                result: state.result-state.diff\n            }\n        case types.SET_DIFF:\n            return{\n                ...state,\n                diff: action.diff\n            }\n        default :\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}